[tool.black]
line-length = 120

[tool.ruff]
target-version = "py39"
line-length = 120#
select = [
#  "A",    # flake8-builtins
#  "ANN",  # flake8-annotations
  "AIR",  # airflow
#  "ARG",  # flake8-unused-arguments
  "ASYNC",# flake8-async
  "B",    # flake8-bugbear
  "BLE",  # flake8-blind-except
  "C4",   # flake8-comprehensions
  "C90",  # mccabe
#  "COM",  # flake8-commas
  "CPY",  # flake8-copyright
#  "D",    # pydocstyle
  "DJ",   # flake8-django
  "DTZ",  # flake8-daytime
#  "E",    # pycodestyle error
  "EM",   # flake8-errormessage
#  "ERA",  # eradicate
  "EXE",  # flake8-executable
  "F",    # pyflakes
  "FA",   # flake8-future-annotations
#  "FBT",  # flake8-boolean-trap
  "FIX",  # flake8-fixme
  "FLY",  # flynt
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
#  "INP",  # flake8-no-pep420
  "INT",  # flake8-gettext
  "ISC",  # flake8-implicit-str-concat
#  "N",    # pep8-naming
  "NPY",  # numpy
  "PERF", # perflint
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
#  "PL",   # pylint
  "PT",   # flake8-pytest-style
#  "PTH",  # flake8-use-pathlib
  "PYI",  # flakes8-pyi
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # Ruff-specific rules
  "S",    # flake8-bandit
  "SIM",  # flake8-simplify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T10",  # flake8-debugger
  "T20",  # flake8-print
  "TCH",  # flake8-type-checking
  "TD",   # flake8-todos
  "TID",  # flake8-tidy-imports
  "TRY",  # tryceratops
#  "UP",   # pyupgrade
  "W",    # pycodestyle warning
  "YTT",  # flake8-2020
  ]
ignore = [
  "F401", # {name} imported but unused
  "F403", # {name} used but not defined
  "F405", # {name} may be undefined, or defined from star imports
  "S101", # Use of assert detected
  ]
pydocstyle.convention = "google"

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = false

[tool.codespell]
ignore-words-list = "nd,te"
skip = "pymatgen/analysis/aflow_prototypes.json"
check-filenames = true
